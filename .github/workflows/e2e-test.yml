on: push

name: E2E Test

defaults:
 run:
  working-directory: ./tests/e2e/

jobs:
  main:
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    runs-on: ${{ matrix.config.os }}

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest,   r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-22.04, r: 'devel'}
        - {os: ubuntu-22.04, r: 'release'}
        - {os: ubuntu-22.04, r: 'oldrel'}

    steps:
      - name: Checkout E2E Directory
        uses: Bhacaz/checkout-files@v2
        with:
          files: tests/e2e
          branch: ${{ github.head_ref || github.ref_name }}

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - name: Install Rhino
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: Appsilon/rhino@${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: init() should create a Rhino directory
        if: always()
        shell: Rscript {0}
        run: rhino::init('RhinoApp')

      - name: diagnostics() should print system information and Rhino version
        if: always()
        shell: Rscript {0}
        run: rhino::diagnostics()

      - name: lint_r() should detect lint errors in R scripts
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-lint-r.R

      - name: format_r() should format R scripts
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-format-r.R

      - name: lint_js() should detect lint errors in JS
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-lint-js.R

      - name: lint_sass() should detect lint errors in CSS
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-lint-sass.R

      - name: build_js() should build app.min.js
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-build-js.R

      - name: build_css() should build app.min.css
        if: always()
        run: |
          cd RhinoApp
          Rscript ../test-build-sass.R

      - name: test_e2e() should run cypress tests
        if: always()
        run: |
          cd RhinoApp
          Rscript -e "rhino::test_e2e()"

      - name: Test R
        if: always()
        run: |
          cd RhinoApp
          Rscript -e 'rhino::test_r()'
          
      - name: Move files
        if: always()
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            copy app-files/main.R RhinoApp/app/main.R
            copy app-files/say_hello.R RhinoApp/app/logic/say_hello.R
            copy app-files/hello.R RhinoApp/app/view/hello.R
            copy app-files/main.scss RhinoApp/app/styles/main.scss
            copy app-files/index.js RhinoApp/app/js/index.js
            copy app-files/test-hello.R RhinoApp/tests/testthat/test-hello.R
            copy app-files/test-say_hello.R RhinoApp/tests/testthat/test-say_hello.R
            copy app-files/hello.spec.js RhinoApp/tests/cypress/integration/hello.spec.js
          else
            cp app-files/main.R RhinoApp/app/main.R
            cp app-files/say_hello.R RhinoApp/app/logic/say_hello.R
            cp app-files/hello.R RhinoApp/app/view/hello.R
            cp app-files/main.scss RhinoApp/app/styles/main.scss
            cp app-files/index.js RhinoApp/app/js/index.js
            cp app-files/test-hello.R RhinoApp/tests/testthat/test-hello.R
            cp app-files/test-say_hello.R RhinoApp/tests/testthat/test-say_hello.R
            cp app-files/hello.spec.js RhinoApp/tests/cypress/integration/hello.spec.js
          fi
      
      - name: Check RhinoApp contents
        if: always()
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            dir RhinoApp /s /b
          else
            ls -R RhinoApp
          fi
